<!-- CONTROLLER SCRIPT BELOW -->
<script>
  var App = angular.module('drag-and-drop', ['ngDragDrop','ngResource']).config(
    ['$httpProvider', function($httpProvider) {
    var authToken = angular.element("meta[name=\"csrf-token\"]").attr("content");
    var defaults = $httpProvider.defaults.headers;

    defaults.common["X-CSRF-TOKEN"] = authToken;
    defaults.patch = defaults.patch || {};
    defaults.patch['Content-Type'] = 'application/json';
    defaults.common['Accept'] = 'application/json';
}]);

App.factory('Picture', ['$resource', function($resource) {
  return $resource('/pictures/:id',
     {url: '@url',
      id: '@id' },
     {update: { method: 'PATCH'}});
}]);


  // this controller starts all lists as blank arrays which the feed is pushed into, and then list 4 is dragged into
    App.controller('oneCtrl',['$scope', '$timeout', 'Picture', function($scope, $timeout, Picture) {
    $scope.pictures= [];

    $scope.newPicture = new Picture();

    Picture.query(function(pictures) {
      $scope.list4 = pictures;
      console.log(pictures);
   });
      $scope.list1 = [];
      $scope.list2 = [];
      $scope.list3 = [];
      $scope.list4 = [];
      $scope.targetPhoto = null;

      // pushing in the urls to the list array as objects from the home controller.
      <% @feedurls.each do |url| %>
        $scope.list1.push({
          'url': '<%= url %>'
        })
      <% end %>

      <% @usearch.each do |url| %>
        $scope.list2.push({
          'url': '<%= url %>'
        })
      <% end %>

      <% @utags.each do |url| %>
        $scope.list3.push({
          'url': '<%= url %>'
        })
      <% end %>

      // the selectPhoto function gets the photo that is selected url from the item.target.src which is the url inside the dragged images info
    $scope.selectPhoto = function(item) {
      console.log(item.target.src);
      $scope.targetPhoto = new Picture({
        url: item.target.src
      })
    }
      // upon drop, this pushes the url into the list4 which then displays it, and then after it returns the target back to nil so i can do it again
    $scope.drop = function() {
      $scope.list4.unshift($scope.targetPhoto);
      $scope.list4.pop();
      console.log($scope.list4);
      $scope.targetPhoto.$save(function(picture) {
        $scope.pictures.unshift(picture);
        console.log($scope.pictures);
        $scope.targetPhoto = new Picture();
      });
      $scope.targetPhoto = null;
    }
  }]);

// this opens a new tab to sign out of the instgram link
  $(document).ready(function(){
    $("#signout").on('click', function(){
      window.open('http://instagram.com/accounts/logout');
      
      $('<iframe />', {
        src: 'http://instagram.com/accounts/logout'
      }).appendTo('body');

    });

});

</script>

<!-- INDEX.HTML.ERB BELOW -->
<body ng-app="drag-and-drop">
  <div ng-controller="oneCtrl">
    <!-- this is the button as well as sign in and sign out paths - do not want this in final verison and need to style NEED TO FIX THE FACT THAT BOTH SEARCH BOXS HAVE TO BE FULL IN ORDER TO SUBMIT-->
      <%= form_tag home_index_path, :method => 'get' do %>  
        <% if @user %> 
<header>
        <h3 class ="login">
               <%= link_to "Sign Out", signout_path, id: "signout" %>
        </h3>
          <h3 class ="name"><%= link_to "View Board", pictures_path %></h3>
          <!-- like to the show board for specifc user -->
        <% end %>

          <%= submit_tag "SEARCH INSTAGRAM USERS AND HASHTAGS", class:"button" %>
</header>   
    <!-- this feed is auto loaded when the user logs in and shows their own news feed / time line -->
          <div class="large-3 columns">
      <div class="lable">News Feed</div>
        <div class="gram">
          <div>
              <img
              ng-repeat="item in list1"
              ng-src="{{ item.url }}"
              data-drag="true"
              data-jqyoui-options="{revert: 'invalid', helper: 'clone'}"
              jqyoui-draggable="{animate:true, onStart: 'selectPhoto'}" 
              ng-model="list1"
              />
          </div>
        </div>
    </div>

    <!-- this shows the search for users profiles. need to fix the fact that it will only show public profiles -->
    <div class="large-3 columns">
        <label class="prefix">enter @username here<%= text_field_tag :keyword, params[:keyword] %> </label>
          <div class="gram">
              <img
              ng-repeat="item in list2"
              ng-src="{{ item.url }}"
              data-drag="true"
              data-jqyoui-options="{revert: 'invalid', helper: 'clone'}"
              jqyoui-draggable="{animate:true, onStart: 'selectPhoto'}" 
              ng-model="list2"/>
          </div>
    </div>
    <!-- below shows the search for hashtags -->
    <div class="large-3 columns">
      <label class="prefix">enter #hashtag here<%= text_field_tag :hashword, params[:hashword] %> </label>
        <div class ="gram">
              <img
              ng-repeat="item in list3"
              ng-src="{{ item.url }}"
              data-drag="true"
              data-jqyoui-options="{revert: 'invalid', helper: 'clone'}"
              jqyoui-draggable="{animate:true, onStart: 'selectPhoto'}" 
              ng-model="list3"/>
        </div>
    </div>
    <!-- below is where you will add the images to list4, which is the new coloumn of the saved photos -->
    <div class="large-3 columns">
      <div class="lable">Drag and Drop Photos Here to Save to Board</div>
        <div id="cart">
            <h4 class="ui-widget-header large-3 columns"></h4>
              <div class="ui-widget-content gram" data-drop="true" ng-model='list4' jqyoui-droppable="{multiple:true, onDrop:'drop()'}" >
                    <img
                    ng-repeat="item in list4"
                    ng-src="{{ item.url }}"
                    data-drag="true"
                    data-jqyoui-options="{revert: 'invalid', helper: 'clone'}"
                    jqyoui-draggable="{index: {{$index}}, animate:true}" 
                    ng-model="list4"/>
                    <!-- {{list4}} shows the url info that is being passed over the the function-->
              </div>
        </div>
    </div>
  </div>
<!-- this end is the for form for do loop at the start of the document.... might need to change this and make a form for each one that way you can search only one input at a time -->
<% end %>
 </body>
 <footer>Pinstagram. Created by Andrew Donovan</footer>
