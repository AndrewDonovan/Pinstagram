<html>
  <head>
  <!-- everything in the head was pulled from the angular drag and drop example.. need to convert to layout.app view and remove bootstrap -->
    <style>
      .thumbnail { height: 280px !important; }
      .btn-droppable { width: 180px; height: 30px; padding-left: 4px; }
      .btn-draggable { width: 160px; }
      .emage { height: 215px; }
      h1 { padding: .2em; margin: 0; }
      #products { height: 300px;
  width: 300px;}
      #cart { width: 200px; float: left; margin-top: 1em; }
      #cart ol { margin: 0; padding: 1em 0 1em 3em; }
    </style>
  </head>



<!-- CONTROLLER SCRIPT BELOW -->
<script>

// $(function() {
//   $("#catalog").accordion();
// });


var App = angular.module('drag-and-drop', ['ngDragDrop']);
  
  App.controller('oneCtrl', function($scope, $timeout) {
    $scope.list1 = [];
    $scope.list2 = [];
    $scope.list3 = [];
    $scope.list4 = [];
    $scope.targetPhoto = null;

    $scope.hideMe = function() {
    return $scope.list4.length > 0;
  }

    // pushing in the urls to the list1 array as objects.
    <% @feedurls.each do |url| %>
      $scope.list1.push({
        'url': '<%= url %>'
      })
    <% end %>

    <% @usearch.each do |url| %>
      $scope.list2.push({
        'url': '<%= url %>'
      })
    <% end %>

    <% @utags.each do |url| %>
      $scope.list3.push({
        'url': '<%= url %>'
      })
    <% end %>

  
  $scope.hello = function(id){
    console.log(id.$id);
    console.log('popped');
    $scope.popped =  {
      'position': 'absolute',
      'z-index': '9999'
    };
  };  

  $scope.bye = function(){
    console.log('unpopped');
    $scope.popped =  {
      'position': 'relative',
      'z-index': '9999'
    };
  };

  $scope.selectPhoto = function(item) {
    console.log(item.target.src);
    $scope.targetPhoto = {url: item.target.src};
  }

  $scope.drop = function() {
    $scope.list4.push($scope.targetPhoto);
    $scope.targetPhoto = null;
  }


  $scope.save = function(){
    console.log(this);
  };


  // Limit items to be dropped in list1
  $scope.optionsList1 = {
    accept: function(dragEl) {
      if ($scope.list4.length >= 30) {
        return false;
      } else {
        return true;
      }
    }
  };

  // Limit items to be dropped in list1
  $scope.optionsList1 = {
    accept: function(dragEl) {
      if ($scope.list1.length >= 2) {
        return false;
      } else {
        return true;
      }
    }
  };
});
</script>



<!-- ACTUAL INDEX.HTML.ERB BELOW -->
<body ng-app="drag-and-drop">
  <div ng-controller="oneCtrl">
<!-- this is the button as well as sign in and sign out paths - do not want this in final verison and need to style NEED TO FIX THE FACT THAT BOTH SEARCH BOXS HAVE TO BE FULL IN ORDER TO SUBMIT-->
    <%= form_tag root_path, :method => 'get' do %>  
        <header>
          <%= submit_tag "SEARCH INSTAGRAM USERS AND HASHTAGS", class:"button expand" %>
        </header>
    <% if @user %> 
        <h1>Hello <%= @user.name %></h1>
    <% end %>


    <h3>
      <%= link_to "Sign In", "/auth/instagram" %>
      <%= link_to "Sign Out", signout_path %>
    </h3>




<!-- this feed is auto loaded when the user logs in and shows their own news feed / time line -->
<div class="large-3 columns">
  <label>current users news feed...</label>
  <div class="gram">
    <div>
          {{list1}}
          <img
          ng-repeat="item in list1"
          ng-src="{{ item.url }}"
          data-drag="true"
          data-jqyoui-options="{revert: 'invalid', helper: 'clone'}"
          jqyoui-draggable="{animate:true, onStart: 'selectPhoto'}" 
          ng-model="list1"
          />
    </div>
  </div>
</div>
<!-- this shows the search for users profiles. need to fix the fact that it will only show public profiles -->
<div class="large-3 columns">
    <label>Search @username
      <%= text_field_tag :keyword, params[:keyword] %>
    </label>
    <div class="gram">
          <img
          ng-repeat="item in list2"
          ng-src="{{ item.url }}"
          data-drag="true"
          data-jqyoui-options="{revert: 'invalid', helper: 'clone'}"
          jqyoui-draggable="{animate:true}" 
          ng-model="list2"/>
      </div>
</div>

<!-- below shows the search for hashtags -->
<div class="large-3 columns">
  <label>Search #hashtag
      <%= text_field_tag :hashword, params[:hashword] %>
  </label>
    <div class ="gram">
          <img
          ng-repeat="item in list3"
          ng-src="{{ item.url }}"
          data-drag="true"
          data-jqyoui-options="{revert: 'invalid', helper: 'clone'}"
          jqyoui-draggable="{animate:true}" 
          ng-model="list3"/>
    </div>
</div>


<!-- need to add the column to drag and drop and save photos here. -->
  <div class="large-3 columns">
    THIS IS WHERE YOU WILL DRAG AND DROP PHOTOS...

  </div>


<!-- test example seeing how this ish works -->
    <div id="cart">
        <h1 class="ui-widget-header large-3 columns">Shopping Cart</h1>
        <div class="ui-widget-content gram" data-drop="true" ng-model='list4' jqyoui-droppable="{multiple:true, onDrop:'drop'}" >
          
                <img
                ng-repeat="item in list4 track by $index"
                ng-src="{{ item.url }}"
                data-drag="true"
                data-jqyoui-options="{revert: 'invalid', helper: 'clone'}"
                jqyoui-draggable="{index: {{$index}}, animate:true}" 
                ng-model="list4"/>
                
                {{list4}}
            
        </div>

    </div>
<!-- can delete eveything above this is all pulled from example -->


</div>
</body>
</html>
<% end %>